generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id           String        @id @unique @default(uuid())
  avatar       Avatar?
  bio          String?
  city         String?
  email        String        @unique
  name         String
  username     String        @unique
  password     String
  verified     DateTime?
  publications Publication[]
  comments     Comment[]
  likes        Like[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @default(now())

  @@map("profiles")
}

model Avatar {
  id         String   @id @unique @default(uuid())
  public_id  String   @unique
  url        String
  profile    Profile  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  profile_id String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("avatars")
}

model Publication {
  id              String    @id @unique @default(uuid())
  subtitle        String?
  image_url       String?
  image_public_id String?
  author          Profile   @relation(fields: [author_id], references: [id], onDelete: Cascade)
  author_id       String
  comments        Comment[]
  likes           Like[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now())

  @@map("publications")
}

model Comment {
  id             String      @id @unique @default(uuid())
  text           String
  publication    Publication @relation(fields: [publication_id], references: [id], onDelete: Cascade)
  publication_id String
  author         Profile     @relation(fields: [author_id], references: [id], onDelete: Cascade)
  author_id      String
  created_at     DateTime    @default(now())
  updated_at     DateTime    @default(now())

  @@map("comments")
}

model Like {
  id             String      @id @unique @default(uuid())
  publication    Publication @relation(fields: [publication_id], references: [id], onDelete: Cascade)
  publication_id String
  author         Profile     @relation(fields: [author_id], references: [id], onDelete: Cascade)
  author_id      String

  @@map("likes")
}
